/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as publicLayoutImport } from './routes/(public)/_layout'
import { Route as privateLayoutImport } from './routes/(private)/_layout'
import { Route as privateLayoutTransactionsRouteImport } from './routes/(private)/_layout/transactions/route'
import { Route as privateLayoutPreferencesRouteImport } from './routes/(private)/_layout/preferences/route'
import { Route as privateLayoutAccountsRouteImport } from './routes/(private)/_layout/accounts/route'
import { Route as privateLayoutIndexRouteImport } from './routes/(private)/_layout/index/route'
import { Route as publicLayoutAuthRegisterRouteImport } from './routes/(public)/_layout/auth/register/route'
import { Route as publicLayoutAuthLoginRouteImport } from './routes/(public)/_layout/auth/login/route'
import { Route as publicLayoutAuthForgotPasswordRouteImport } from './routes/(public)/_layout/auth/forgot-password/route'

// Create Virtual Routes

const publicImport = createFileRoute('/(public)')()
const privateImport = createFileRoute('/(private)')()
const publicLayoutAboutLazyImport = createFileRoute('/(public)/_layout/about')()
const publicLayoutAuthWelcomeRouteLazyImport = createFileRoute(
  '/(public)/_layout/auth/welcome',
)()
const publicLayoutAuthResetPasswordRouteLazyImport = createFileRoute(
  '/(public)/_layout/auth/reset-password',
)()

// Create/Update Routes

const publicRoute = publicImport.update({
  id: '/(public)',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const privateRoute = privateImport.update({
  id: '/(private)',
  getParentRoute: () => rootRoute,
} as any)

const publicLayoutRoute = publicLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => publicRoute,
} as any)

const privateLayoutRoute = privateLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => privateRoute,
} as any)

const publicLayoutAboutLazyRoute = publicLayoutAboutLazyImport
  .update({
    id: '/about',
    path: '/about',
    getParentRoute: () => publicLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(public)/_layout/about.lazy').then((d) => d.Route),
  )

const privateLayoutTransactionsRouteRoute = privateLayoutTransactionsRouteImport
  .update({
    id: '/transactions',
    path: '/transactions',
    getParentRoute: () => privateLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(private)/_layout/transactions/route.lazy').then(
      (d) => d.Route,
    ),
  )

const privateLayoutPreferencesRouteRoute = privateLayoutPreferencesRouteImport
  .update({
    id: '/preferences',
    path: '/preferences',
    getParentRoute: () => privateLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(private)/_layout/preferences/route.lazy').then(
      (d) => d.Route,
    ),
  )

const privateLayoutAccountsRouteRoute = privateLayoutAccountsRouteImport
  .update({
    id: '/accounts',
    path: '/accounts',
    getParentRoute: () => privateLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(private)/_layout/accounts/route.lazy').then(
      (d) => d.Route,
    ),
  )

const privateLayoutIndexRouteRoute = privateLayoutIndexRouteImport
  .update({
    id: '/',
    path: '/',
    getParentRoute: () => privateLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(private)/_layout/index/route.lazy').then((d) => d.Route),
  )

const publicLayoutAuthWelcomeRouteLazyRoute =
  publicLayoutAuthWelcomeRouteLazyImport
    .update({
      id: '/auth/welcome',
      path: '/auth/welcome',
      getParentRoute: () => publicLayoutRoute,
    } as any)
    .lazy(() =>
      import('./routes/(public)/_layout/auth/welcome/route.lazy').then(
        (d) => d.Route,
      ),
    )

const publicLayoutAuthResetPasswordRouteLazyRoute =
  publicLayoutAuthResetPasswordRouteLazyImport
    .update({
      id: '/auth/reset-password',
      path: '/auth/reset-password',
      getParentRoute: () => publicLayoutRoute,
    } as any)
    .lazy(() =>
      import('./routes/(public)/_layout/auth/reset-password/route.lazy').then(
        (d) => d.Route,
      ),
    )

const publicLayoutAuthRegisterRouteRoute = publicLayoutAuthRegisterRouteImport
  .update({
    id: '/auth/register',
    path: '/auth/register',
    getParentRoute: () => publicLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(public)/_layout/auth/register/route.lazy').then(
      (d) => d.Route,
    ),
  )

const publicLayoutAuthLoginRouteRoute = publicLayoutAuthLoginRouteImport
  .update({
    id: '/auth/login',
    path: '/auth/login',
    getParentRoute: () => publicLayoutRoute,
  } as any)
  .lazy(() =>
    import('./routes/(public)/_layout/auth/login/route.lazy').then(
      (d) => d.Route,
    ),
  )

const publicLayoutAuthForgotPasswordRouteRoute =
  publicLayoutAuthForgotPasswordRouteImport
    .update({
      id: '/auth/forgot-password',
      path: '/auth/forgot-password',
      getParentRoute: () => publicLayoutRoute,
    } as any)
    .lazy(() =>
      import('./routes/(public)/_layout/auth/forgot-password/route.lazy').then(
        (d) => d.Route,
      ),
    )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(private)': {
      id: '/(private)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof privateImport
      parentRoute: typeof rootRoute
    }
    '/(private)/_layout': {
      id: '/(private)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof privateLayoutImport
      parentRoute: typeof privateRoute
    }
    '/(public)': {
      id: '/(public)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicImport
      parentRoute: typeof rootRoute
    }
    '/(public)/_layout': {
      id: '/(public)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicLayoutImport
      parentRoute: typeof publicRoute
    }
    '/(private)/_layout/': {
      id: '/(private)/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof privateLayoutIndexRouteImport
      parentRoute: typeof privateLayoutImport
    }
    '/(private)/_layout/accounts': {
      id: '/(private)/_layout/accounts'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof privateLayoutAccountsRouteImport
      parentRoute: typeof privateLayoutImport
    }
    '/(private)/_layout/preferences': {
      id: '/(private)/_layout/preferences'
      path: '/preferences'
      fullPath: '/preferences'
      preLoaderRoute: typeof privateLayoutPreferencesRouteImport
      parentRoute: typeof privateLayoutImport
    }
    '/(private)/_layout/transactions': {
      id: '/(private)/_layout/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof privateLayoutTransactionsRouteImport
      parentRoute: typeof privateLayoutImport
    }
    '/(public)/_layout/about': {
      id: '/(public)/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof publicLayoutAboutLazyImport
      parentRoute: typeof publicLayoutImport
    }
    '/(public)/_layout/auth/forgot-password': {
      id: '/(public)/_layout/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof publicLayoutAuthForgotPasswordRouteImport
      parentRoute: typeof publicLayoutImport
    }
    '/(public)/_layout/auth/login': {
      id: '/(public)/_layout/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof publicLayoutAuthLoginRouteImport
      parentRoute: typeof publicLayoutImport
    }
    '/(public)/_layout/auth/register': {
      id: '/(public)/_layout/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof publicLayoutAuthRegisterRouteImport
      parentRoute: typeof publicLayoutImport
    }
    '/(public)/_layout/auth/reset-password': {
      id: '/(public)/_layout/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof publicLayoutAuthResetPasswordRouteLazyImport
      parentRoute: typeof publicLayoutImport
    }
    '/(public)/_layout/auth/welcome': {
      id: '/(public)/_layout/auth/welcome'
      path: '/auth/welcome'
      fullPath: '/auth/welcome'
      preLoaderRoute: typeof publicLayoutAuthWelcomeRouteLazyImport
      parentRoute: typeof publicLayoutImport
    }
  }
}

// Create and export the route tree

interface privateLayoutRouteChildren {
  privateLayoutIndexRouteRoute: typeof privateLayoutIndexRouteRoute
  privateLayoutAccountsRouteRoute: typeof privateLayoutAccountsRouteRoute
  privateLayoutPreferencesRouteRoute: typeof privateLayoutPreferencesRouteRoute
  privateLayoutTransactionsRouteRoute: typeof privateLayoutTransactionsRouteRoute
}

const privateLayoutRouteChildren: privateLayoutRouteChildren = {
  privateLayoutIndexRouteRoute: privateLayoutIndexRouteRoute,
  privateLayoutAccountsRouteRoute: privateLayoutAccountsRouteRoute,
  privateLayoutPreferencesRouteRoute: privateLayoutPreferencesRouteRoute,
  privateLayoutTransactionsRouteRoute: privateLayoutTransactionsRouteRoute,
}

const privateLayoutRouteWithChildren = privateLayoutRoute._addFileChildren(
  privateLayoutRouteChildren,
)

interface privateRouteChildren {
  privateLayoutRoute: typeof privateLayoutRouteWithChildren
}

const privateRouteChildren: privateRouteChildren = {
  privateLayoutRoute: privateLayoutRouteWithChildren,
}

const privateRouteWithChildren =
  privateRoute._addFileChildren(privateRouteChildren)

interface publicLayoutRouteChildren {
  publicLayoutAboutLazyRoute: typeof publicLayoutAboutLazyRoute
  publicLayoutAuthForgotPasswordRouteRoute: typeof publicLayoutAuthForgotPasswordRouteRoute
  publicLayoutAuthLoginRouteRoute: typeof publicLayoutAuthLoginRouteRoute
  publicLayoutAuthRegisterRouteRoute: typeof publicLayoutAuthRegisterRouteRoute
  publicLayoutAuthResetPasswordRouteLazyRoute: typeof publicLayoutAuthResetPasswordRouteLazyRoute
  publicLayoutAuthWelcomeRouteLazyRoute: typeof publicLayoutAuthWelcomeRouteLazyRoute
}

const publicLayoutRouteChildren: publicLayoutRouteChildren = {
  publicLayoutAboutLazyRoute: publicLayoutAboutLazyRoute,
  publicLayoutAuthForgotPasswordRouteRoute:
    publicLayoutAuthForgotPasswordRouteRoute,
  publicLayoutAuthLoginRouteRoute: publicLayoutAuthLoginRouteRoute,
  publicLayoutAuthRegisterRouteRoute: publicLayoutAuthRegisterRouteRoute,
  publicLayoutAuthResetPasswordRouteLazyRoute:
    publicLayoutAuthResetPasswordRouteLazyRoute,
  publicLayoutAuthWelcomeRouteLazyRoute: publicLayoutAuthWelcomeRouteLazyRoute,
}

const publicLayoutRouteWithChildren = publicLayoutRoute._addFileChildren(
  publicLayoutRouteChildren,
)

interface publicRouteChildren {
  publicLayoutRoute: typeof publicLayoutRouteWithChildren
}

const publicRouteChildren: publicRouteChildren = {
  publicLayoutRoute: publicLayoutRouteWithChildren,
}

const publicRouteWithChildren =
  publicRoute._addFileChildren(publicRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof privateLayoutIndexRouteRoute
  '/accounts': typeof privateLayoutAccountsRouteRoute
  '/preferences': typeof privateLayoutPreferencesRouteRoute
  '/transactions': typeof privateLayoutTransactionsRouteRoute
  '/about': typeof publicLayoutAboutLazyRoute
  '/auth/forgot-password': typeof publicLayoutAuthForgotPasswordRouteRoute
  '/auth/login': typeof publicLayoutAuthLoginRouteRoute
  '/auth/register': typeof publicLayoutAuthRegisterRouteRoute
  '/auth/reset-password': typeof publicLayoutAuthResetPasswordRouteLazyRoute
  '/auth/welcome': typeof publicLayoutAuthWelcomeRouteLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof privateLayoutIndexRouteRoute
  '/accounts': typeof privateLayoutAccountsRouteRoute
  '/preferences': typeof privateLayoutPreferencesRouteRoute
  '/transactions': typeof privateLayoutTransactionsRouteRoute
  '/about': typeof publicLayoutAboutLazyRoute
  '/auth/forgot-password': typeof publicLayoutAuthForgotPasswordRouteRoute
  '/auth/login': typeof publicLayoutAuthLoginRouteRoute
  '/auth/register': typeof publicLayoutAuthRegisterRouteRoute
  '/auth/reset-password': typeof publicLayoutAuthResetPasswordRouteLazyRoute
  '/auth/welcome': typeof publicLayoutAuthWelcomeRouteLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(private)': typeof privateRouteWithChildren
  '/(private)/_layout': typeof privateLayoutRouteWithChildren
  '/(public)': typeof publicRouteWithChildren
  '/(public)/_layout': typeof publicLayoutRouteWithChildren
  '/(private)/_layout/': typeof privateLayoutIndexRouteRoute
  '/(private)/_layout/accounts': typeof privateLayoutAccountsRouteRoute
  '/(private)/_layout/preferences': typeof privateLayoutPreferencesRouteRoute
  '/(private)/_layout/transactions': typeof privateLayoutTransactionsRouteRoute
  '/(public)/_layout/about': typeof publicLayoutAboutLazyRoute
  '/(public)/_layout/auth/forgot-password': typeof publicLayoutAuthForgotPasswordRouteRoute
  '/(public)/_layout/auth/login': typeof publicLayoutAuthLoginRouteRoute
  '/(public)/_layout/auth/register': typeof publicLayoutAuthRegisterRouteRoute
  '/(public)/_layout/auth/reset-password': typeof publicLayoutAuthResetPasswordRouteLazyRoute
  '/(public)/_layout/auth/welcome': typeof publicLayoutAuthWelcomeRouteLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/accounts'
    | '/preferences'
    | '/transactions'
    | '/about'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/welcome'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/accounts'
    | '/preferences'
    | '/transactions'
    | '/about'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/welcome'
  id:
    | '__root__'
    | '/(private)'
    | '/(private)/_layout'
    | '/(public)'
    | '/(public)/_layout'
    | '/(private)/_layout/'
    | '/(private)/_layout/accounts'
    | '/(private)/_layout/preferences'
    | '/(private)/_layout/transactions'
    | '/(public)/_layout/about'
    | '/(public)/_layout/auth/forgot-password'
    | '/(public)/_layout/auth/login'
    | '/(public)/_layout/auth/register'
    | '/(public)/_layout/auth/reset-password'
    | '/(public)/_layout/auth/welcome'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  privateRoute: typeof privateRouteWithChildren
  publicRoute: typeof publicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  privateRoute: privateRouteWithChildren,
  publicRoute: publicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(private)",
        "/(public)"
      ]
    },
    "/(private)": {
      "filePath": "(private)",
      "children": [
        "/(private)/_layout"
      ]
    },
    "/(private)/_layout": {
      "filePath": "(private)/_layout.tsx",
      "parent": "/(private)",
      "children": [
        "/(private)/_layout/",
        "/(private)/_layout/accounts",
        "/(private)/_layout/preferences",
        "/(private)/_layout/transactions"
      ]
    },
    "/(public)": {
      "filePath": "(public)",
      "children": [
        "/(public)/_layout"
      ]
    },
    "/(public)/_layout": {
      "filePath": "(public)/_layout.tsx",
      "parent": "/(public)",
      "children": [
        "/(public)/_layout/about",
        "/(public)/_layout/auth/forgot-password",
        "/(public)/_layout/auth/login",
        "/(public)/_layout/auth/register",
        "/(public)/_layout/auth/reset-password",
        "/(public)/_layout/auth/welcome"
      ]
    },
    "/(private)/_layout/": {
      "filePath": "(private)/_layout/index/route.tsx",
      "parent": "/(private)/_layout"
    },
    "/(private)/_layout/accounts": {
      "filePath": "(private)/_layout/accounts/route.tsx",
      "parent": "/(private)/_layout"
    },
    "/(private)/_layout/preferences": {
      "filePath": "(private)/_layout/preferences/route.tsx",
      "parent": "/(private)/_layout"
    },
    "/(private)/_layout/transactions": {
      "filePath": "(private)/_layout/transactions/route.tsx",
      "parent": "/(private)/_layout"
    },
    "/(public)/_layout/about": {
      "filePath": "(public)/_layout/about.lazy.tsx",
      "parent": "/(public)/_layout"
    },
    "/(public)/_layout/auth/forgot-password": {
      "filePath": "(public)/_layout/auth/forgot-password/route.tsx",
      "parent": "/(public)/_layout"
    },
    "/(public)/_layout/auth/login": {
      "filePath": "(public)/_layout/auth/login/route.tsx",
      "parent": "/(public)/_layout"
    },
    "/(public)/_layout/auth/register": {
      "filePath": "(public)/_layout/auth/register/route.tsx",
      "parent": "/(public)/_layout"
    },
    "/(public)/_layout/auth/reset-password": {
      "filePath": "(public)/_layout/auth/reset-password/route.lazy.tsx",
      "parent": "/(public)/_layout"
    },
    "/(public)/_layout/auth/welcome": {
      "filePath": "(public)/_layout/auth/welcome/route.lazy.tsx",
      "parent": "/(public)/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
